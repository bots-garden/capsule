version: '3'
# task install-mkdocs
# task serve-mkdocs
# task publish-mkdocs
# task release

tasks:
  # Generate the documentation
  # We use [mkdocs](https://www.mkdocs.org/)
  install-mkdocs:
    cmds:
      - pip install mkdocs-material
  serve-mkdocs:
    cmds:
      - mkdocs serve
  publish-mkdocs: # on the `main` branch
    cmds:
      - mkdocs gh-deploy

  # Generate a release of the capsule MDK
  # Then create the release manually on GitHub
  release:
    env:
      #TAG: "v0.3.4"
      #TAG: "v0.3.5"
      #TAG: "v0.3.6" # next release
      #TAG: "v0.3.7" # next release (this is a pre-release)
      TAG: "v0.3.8"

    cmds:
      - echo "ðŸ“¦ Generating release..."
      - git add .
      - git commit -m "ðŸ“¦ updates HDK for ${TAG}"
      - git tag ${TAG}
      - git push origin main ${TAG}

  remove-tag:
    env:
      TAG: "v0.3.8"
    cmds:
      - git tag -d ${TAG}

  build-releases:
    env:
      TAG: "v0.3.8"
    cmds:
      - | 
        cd capsule-cli
        env CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o capsule-${TAG}-darwin-arm64
        env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o capsule-${TAG}-darwin-amd64
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o capsule-${TAG}-linux-arm64
        env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o capsule-${TAG}-linux-amd64
        mv capsule-${TAG}-* ../release

      - |
        cd capsule-http
        env CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o capsule-http-${TAG}-darwin-arm64
        env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o capsule-http-${TAG}-darwin-amd64
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o capsule-http-${TAG}-linux-arm64
        env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o capsule-http-${TAG}-linux-amd64
        mv capsule-http-${TAG}-* ../release

      - |
        cd capsctl
        env CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o capsctl-${TAG}-darwin-arm64
        env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o capsctl-${TAG}-darwin-amd64
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o capsctl-${TAG}-linux-arm64
        env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o capsctl-${TAG}-linux-amd64
        mv capsctl-${TAG}-* ../release

#replace github.com/bots-garden/capsule-host-sdk  => ../../capsule-host-sdk
#replace github.com/bots-garden/capsule-module-sdk => ../../capsule-module-sdk

  # Build of capsule-http Docker image
  build-push-docker-image:
    vars:
      IMAGE_BASE_NAME: "capsule-http"
      IMAGE_TAG: "0.3.8"
    cmds:
      - echo "ðŸ‘‹ {{.IMAGE_BASE_NAME}}-{{.GOOS}}-{{.GOARCH}}:{{.IMAGE_TAG}}"
      - |
        cd capsule-http
        docker login -u ${DOCKER_USER} -p ${DOCKER_PWD}
        docker buildx build --platform {{.GOOS}}/{{.GOARCH}} --push -t ${DOCKER_USER}/{{.IMAGE_BASE_NAME}}-{{.GOOS}}-{{.GOARCH}}:{{.IMAGE_TAG}} .

  build-capsule-http-for-docker:
    cmds:
      - |
        echo "ðŸ“¦ Building capsule-http... GOOS={{.GOOS}} GOARCH={{.GOARCH}}"
        cd capsule-http
        CGO_ENABLED=0 GOOS={{.GOOS}} GOARCH={{.GOARCH}} go build -ldflags="-s -w" -a -installsuffix cgo -o capsule-http .
        ls -lh capsule-http

  build-docker-capsule-http-image-darwin-arm64:
    vars:
      GOOS: "darwin" 
      GOARCH: "arm64"
    cmds:
      - task: build-capsule-http-for-docker
        vars: { GOOS: '{{.GOOS}}', GOARCH: '{{.GOARCH}}' }
      - task: build-push-docker-image
        vars: { 
          GOOS: '{{.GOOS}}', 
          GOARCH: '{{.GOARCH}}'
        }

  build-docker-capsule-http-image-darwin-amd64:
    vars:
      GOOS: "darwin" 
      GOARCH: "amd64"
    cmds:
      - task: build-capsule-http-for-docker
        vars: { GOOS: '{{.GOOS}}', GOARCH: '{{.GOARCH}}' }
      - task: build-push-docker-image
        vars: { 
          GOOS: '{{.GOOS}}', 
          GOARCH: '{{.GOARCH}}'
        }

  build-docker-capsule-http-image-linux-amd64:
    vars:
      GOOS: "linux" 
      GOARCH: "amd64"
    cmds:
      - task: build-capsule-http-for-docker
        vars: { GOOS: '{{.GOOS}}', GOARCH: '{{.GOARCH}}' }
      - task: build-push-docker-image
        vars: { 
          GOOS: '{{.GOOS}}', 
          GOARCH: '{{.GOARCH}}'
        }

  build-docker-capsule-http-image-linux-arm64:
    vars:
      GOOS: "linux" 
      GOARCH: "arm64"
    cmds:
      - task: build-capsule-http-for-docker
        vars: { GOOS: '{{.GOOS}}', GOARCH: '{{.GOARCH}}' }
      - task: build-push-docker-image
        vars: { 
          GOOS: '{{.GOOS}}', 
          GOARCH: '{{.GOARCH}}'
        }

