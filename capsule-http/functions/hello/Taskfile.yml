version: '3'

description: >
  # Integration tests
  
  - Build the wasm module: `task build-wasm`
  - Build capsule-http: `task build-capsule-http`
  - Start Hello: `task start`
  - Call the function/service: `task call`
  - Get the Metrics: `task metrics`
  - Run load test: `task stress`
  - Test Health check: `task health-check`

  ```bash
  task build-wasm build-capsule-http start

  ```

env:
    HTTP_PORT: '8090'
    DOMAIN: 'localhost'
    PROTOCOL: 'http'
    WASM_FILE: './hello.wasm'

tasks:
  build-wasm:
    cmds:
      - |
        tinygo build -o hello.wasm \
          -scheduler=none \
          --no-debug \
          -target wasi ./main.go 
        ls -lh *.wasm

  # Build of capsule-http
  build-capsule-http:
    cmds:
      - |
        echo "ðŸ“¦ Building capsule-http..."
        cd ../..
        go build -ldflags="-s -w" -o capsule-http
        ls -lh capsule-http
        mv capsule-http ./functions/hello

  start:
    cmds:
      - | 
        echo "ðŸš€ Testing hello..."
        NGROK_AUTHTOKEN=""
        ./capsule-http --wasm=${WASM_FILE} --httpPort=${HTTP_PORT}

  call:
    env:
      JSON_DATA: '{"name":"Bob Morane","age":42}'
    cmds:
      - | 
        curl -X POST ${PROTOCOL}://${DOMAIN}:${HTTP_PORT} \
          -H 'Content-Type: application/json; charset=utf-8' \
          -d "${JSON_DATA}"
        echo ""

  metrics:
    cmds:
      - | 
        curl -X GET ${PROTOCOL}://${DOMAIN}:${HTTP_PORT}/metrics
        echo ""

  health-check:
    cmds:
      - | 
        curl -X GET ${PROTOCOL}://${DOMAIN}:${HTTP_PORT}/health
        echo ""

  stress:
    env:
      JSON_DATA: '{"name":"Bob Morane","age":42}'
    cmds:
      - | 
        #hey -n 300 -c 1 -m POST \
        #hey -n 300 -c 100 -m POST \
        #hey -n 1596 -c 1 -m POST \
        #hey -n 15 -c 1 -m POST \
        hey -n 300 -c 100 -m POST \
        -H "Content-Type: application/json; charset=utf-8" \
        -d "${JSON_DATA}" ${PROTOCOL}://${DOMAIN}:${HTTP_PORT}
